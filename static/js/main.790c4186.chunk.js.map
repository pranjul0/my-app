{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","style","color","onClick","enableDarkMode","role","htmlFor","Textform","useState","text","setText","heading","onChange","event","target","value","backgroundColor","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","msg","App","setMode","setAlert","showAlert","message","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.790c4186.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n             <nav className={`navbar navbar-expand-lg navbar- ${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" style={{color: props.mode === 'dark'?'white':'black' }} aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n       {/* <Link className=\"nav-link\" style={{color: props.mode === 'dark'?'white':'black' }} to=\"/About\">About</Link> */}\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n                <div className={`form-check form-switch text- ${props.mode === 'light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input mx-3\" onClick={props.enableDarkMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label mx-3\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string}\r\n// Navbar.defaultProps = {title: 'Pranzul'}","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    \r\n\r\nconst handleUpClick = () =>{\r\n    // console.log('Text was change to uppercase');\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n}\r\nconst handleLowClick = () =>{\r\n    // console.log('Text was change to uppercase');\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n}\r\n    const handleClearClick = () =>{\r\n    let newText = ('');\r\n    setText(newText)\r\n}\r\n    const handleOnChange = (event) =>{\r\n        // console.log('On Change');\r\n        setText(event.target.value);\r\n    }\r\n\r\n   const handleCopy = ()=>{\r\n       var text = document.getElementById(\"myBox\");\r\n       text.select();\r\n       navigator.clipboard.writeText(text.value);\r\n   }\r\n\r\n\r\n    const [text, setText] = useState('');\r\n    // setText(\"PRANZUL\");\r\n    return (\r\n        <>\r\n <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black' }}>\r\n        <h1>{props.heading}</h1>\r\n        \r\n       <div className=\"mb-3\">\r\n         <textarea  className=\"form-control\" id=\"myBox\" onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark'?'grey':'white' , color: props.mode === 'dark'?'white':'grey'  }} rows='8' value = {text} >\r\n         </textarea> \r\n       </div>\r\n        <button className=\"btn btn-warning my-2 mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-warning my-2 mx-2\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n        <button className=\"btn btn-warning my-2 mx-2\" onClick={handleClearClick}>Clear</button>\r\n        <button className=\"btn btn-warning my-2 mx-2\" onClick={handleCopy}>Copy</button>\r\n      \r\n </div>\r\n <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'black' }}>\r\n     \r\n     <h1>Your Text Summary </h1>\r\n     <p>{text.split(\" \").length} words and {text.length} Char</p>\r\n </div>\r\n\r\n </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props){\r\n    return (\r\n        \r\n              props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n             <strong>{ props.alert.type } </strong>:{props.alert.msg} \r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n                    \r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About  from './components/About';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n  \n  const showAlert = (message, type) =>{\n        setAlert({\n          msg: message,\n          type: type\n        })\n  }\n\n  const enableDarkMode = ()=>{\n        if(mode === 'light'){\n          setMode('dark');\n          document.body.style.backgroundColor = '#042743';\n          showAlert('Dark Mode Enable', \"Success\")\n        }\n        else{\n          setMode('light');\n          document.body.style.backgroundColor = 'white';\n          showAlert('Light Mode Enable', \"Success\")\n        }\n  }\n  return (\n    <>\n          <Navbar mode={mode} enableDarkMode={enableDarkMode}/>\n          <Alert alert={alert}/>\n          <div className=\"container my-3\" >\n                    <TextForm heading='Enter the text to analyze Your Below' mode={mode}/> \n                    \n          </div>\n \n\n    \n    \n\n   \n          \n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}